util scheme

true		dummypin[true]
false		dummypin[false]

addr scheme

mdrtogprar 	inttoint[8,5] 		in[bus.mdr]
gprar 		reg[5] 				in[mdrtogprar] ld[oper1.ldgprar] inc[oper1.incgprar]
abtomx1		inttoint[8,16]		in[exec1.ab]
mx1 		mp[2]				in[abtomx1, exec1.aw] ctrl[oper1.mxgpr]
gpr			gpr[32, 16]			addr[gprar] in[mx1] wr[oper1.wrgpr] rd[util.true]					
sp 			reg[16] 			in[exec1.aw] inc[oper1.incsp] dec[oper1.decsp] ld[oper1.ldsp] init[4096]
add 		add[16]				in[mx2, mx3]
cw 			reg[16]				in[add] ld[oper1.ldcw]
mx2			mp[4] 				in[intr3.ivtp, gpr, fetch1.pc, cw] ctrl[oper1.mxadda0, oper1.mxadda1]
mx3 		mp[4]				in[intr3.ivtdsp, fetch1.ir15_0, gpr, irtomx3] ctrl[oper1.mxaddb0, oper1.mxaddb1]
irtomx3 	inttoint[8,16,true] in[fetch1.ir23_16]

bus scheme

mx1			mp[8]				in[fetch1.pc, addr.gpr, fetch1.ir15_0, dw, addr.add, addr.sp] ctrl[oper1.mxmar0, oper1.mxmar1, oper1.mxmar2]
mx2			mp[8]				in[bus.dbus, exec1.ab, exec1.aw15_8, exec1.aw7_0, fetch1.pc15_8, fetch1.pc7_0, exec2.psw15_8, exec2.psw7_0] ctrl[oper1.mxmdr0, oper1.mxmdr1, oper1.mxmdr2]
mar			reg[16]				in[mx1] ld[oper1.ldmar] inc[oper1.incmar]
mdr			reg[16]				in[mx2] ld[ldmdr]
ldmdr		or[2]				in[oper1.ldmdr, mdrin]
mdrin		and[2]				in[oper1.rdcpu, fccpu]
fccpu		not					in[notfcbus]
notfcbus	tsb					in[bus.fcbus]
marout		tsb					in[mar] ctrl[oper1.emar]
mdrout		tsb					in[mdr] ctrl[oper1.emdr]
dwh			reg[8]				in[mdr] ld[oper1.lddwh]
dwl			reg[8]				in[mdr] ld[oper1.lddwl]
// add aggregated dw signal
notrdbus	not					in[onerdbus]
notwrbus	not					in[onewrbus]
onerdbus	tsb					in[util.true] ctrl[oper1.rdcpu]
onewrbus	tsb					in[util.true] ctrl[oper1.wrcpu]
hack		and[2]				in[ui.hreq, notemar]
notemar		not					in[oper1.emar]
// add buses RDBUS, WRBUS, FCBUS

exec1 scheme

alu			alu					in[ab, bb] not[oper1.not] xor[oper1.xor] or[oper1.or] and[oper1.and] dec[oper1.dec] inc[oper1.inc] sub[oper1.sub] add[oper1.add] 
ab			reg[8]				in[mx1] ld[oper1.ldab] shr[oper1.shr] ir[mx3] shl[oper1.shl] il[mx4]
bb			reg[8]				in[mx2] ld[oper1.ldbb]
mx1			mp[2]				in[alu, bb] ctrl[oper1.mxab]
mx2			mp[4]				in[addr.gpr, bus.mdr, fetch1.ir15_8] ctrl [oper1.mxbb0, oper1.mxbb1]
// add bool converter for AB
mx3			mp[4]				in[ab, util.false]